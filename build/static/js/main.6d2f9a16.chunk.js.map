{"version":3,"sources":["mascotas/services/index.js","mascotas/components/ListofPets.jsx","mascotas/components/Form.jsx","mascotas/components/Home.jsx","Router.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","getLastPets","a","axios","url","method","response","console","log","getPets","savePet","petData","data","deletePet","id","delete","ListofPets","useState","mascotas","setMascotas","loadPets","status","useEffect","borrarMascota","className","length","map","mascota","nombre","tipo","fechaDeNacimiento","peso","vacunas","nombreDueno","ciDueno","telefonoDueno","onClick","_id","Form","agregarMascota","setMascota","error","setError","handleChange","e","target","name","value","onSubmit","preventDefault","trim","type","placeholder","onChange","Home","loadLastPets","to","router","exact","path","component","App","Fragment","Router","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d2f9a16.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl =  'https://admvet.herokuapp.com/api/mascota' \r\n\r\nexport async function getLastPets () {\r\n  try {\r\n    const response = await axios({\r\n      url: `${baseUrl}/mascotas/last`,\r\n      method: 'GET'\r\n    })\r\n\r\n    return response\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport async function getPets () {\r\n  try {\r\n    const response = await axios({\r\n      url: `${baseUrl}/mascotas`,\r\n      method: 'GET'\r\n    })\r\n\r\n    return response\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport async function savePet (petData) {\r\n  try {\r\n   \r\n    const response = await axios({\r\n      url: `${baseUrl}/guardar-mascota`,\r\n      method: 'POST',\r\n      data: petData,\r\n    })\r\n\r\n    return response\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n\r\nexport async function updatePet (updatedpet) {\r\n  console.log(updatedpet)\r\n  try {\r\n    \r\n    const response = await axios({\r\n      url: `${baseUrl}/mascota` + updatedpet._id,\r\n      method: 'PUT',\r\n      data: updatedpet,\r\n    })\r\n\r\n    return response\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport async function deletePet (id) {\r\n  try {\r\n    const response = await axios.delete(`${baseUrl}/mascota/` + id)\r\n    return response\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n\r\n  ","import React, {useState, useEffect } from 'react';\r\nimport { getPets, deletePet} from '../services/index.js';\r\n\r\nconst ListofPets = () => {\r\n\r\n    const [mascotas, setMascotas] = useState([]);\r\n\r\n    async function loadPets() {\r\n        const response = await getPets()\r\n\r\n        if (response.status === 200) {\r\n            setMascotas(response.data.mascotas)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {       \r\n          loadPets(); \r\n    }, [])\r\n\r\n    const borrarMascota = async (id) => {\r\n        await deletePet(id);\r\n        loadPets();\r\n    }\r\n\r\n    /*const actualizarMascota = async (mascota) => {\r\n        await updatePet(mascota)\r\n        loadPets()\r\n    }*/\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Administra tus mascotas</h2>\r\n            {mascotas.length ===0 && 'No hay mascotas ingresadas'}\r\n                {\r\n                mascotas.map((mascota) => (    \r\n                <div className=\"cita\" key={mascota._id}> \r\n                    <p>Nombre: <span>{mascota.nombre}</span> </p>\r\n                    <p>Tipo: <span>{mascota.tipo}</span> </p>\r\n                    <p>Fecha de nacimiento: <span>{mascota.fechaDeNacimiento}</span> </p>\r\n                    <p>Peso: <span>{mascota.peso}</span> </p>\r\n                    <p>Vacunas anuales: <span>{mascota.vacunas}</span> </p>\r\n                    <p>Nombre Dueño: <span>{mascota.nombreDueno}</span> </p>\r\n                    <p>Ci Dueño: <span>{mascota.ciDueno}</span> </p>\r\n                    <p>Teléfono Dueño: <span>{mascota.telefonoDueno}</span> </p>\r\n\r\n                    <button className=\"button eliminar\"\r\n                        onClick={() => borrarMascota(mascota._id)}\r\n                    >Borrar</button>\r\n                    \r\n                 </div>\r\n                ))\r\n                }   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListofPets\r\n","import React, {Fragment, useState} from 'react';\r\n\r\nconst Form = ({agregarMascota}) => {\r\n\r\n    // Crear State de Mascota\r\n    const [mascota, setMascota] = useState({\r\n        nombre: '',\r\n        tipo: '',\r\n        fechaDeNacimiento: '',\r\n        peso: '',\r\n        vacunas: '',\r\n        nombreDueno: '',\r\n        ciDueno: '',\r\n        telefonoDueno: ''\r\n    });\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        setMascota({\r\n            ...mascota,\r\n            [e.target.name]: e.target.value \r\n        })\r\n    }\r\n\r\n    // Extraer los valores del state\r\n    const {nombre, tipo, fechaDeNacimiento, peso, vacunas, nombreDueno, ciDueno, telefonoDueno} = mascota;\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Validar\r\n        if(nombre.trim() === '' || tipo.trim() === '' || fechaDeNacimiento.trim() === '' || peso.trim() === '' ||\r\n        vacunas.trim() === '' || nombreDueno.trim() === '' || ciDueno.trim() === '' || telefonoDueno.trim() === ''){\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n         // Agregar la nueva mascota\r\n        agregarMascota(mascota);\r\n\r\n        setMascota({\r\n            nombre: '',\r\n            tipo: '',\r\n            fechaDeNacimiento: '',\r\n            peso: '',\r\n            vacunas: '',\r\n            nombreDueno: '',\r\n            ciDueno: '',\r\n            telefonoDueno: ''\r\n        });    \r\n        \r\n        setError(false);\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Ingresar Mascota</h2>\r\n\r\n            { error ? <p className=\"alerta-error\">Todos los campos son obligatorios</p>\r\n             : null}\r\n\r\n            <form\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <label>Nombre Mascota</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"nombre\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre Mascota\"\r\n                    onChange={handleChange}\r\n                    value={nombre}\r\n                />\r\n                <label>Tipo</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"tipo\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Tipo\"\r\n                    onChange={handleChange}\r\n                    value={tipo}\r\n                />\r\n                <label>Fecha De Nacimiento</label>\r\n                <input \r\n                    type=\"date\"\r\n                    name=\"fechaDeNacimiento\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Fecha de nacimiento de la mascota\"\r\n                    onChange={handleChange}\r\n                    value={fechaDeNacimiento}\r\n                />\r\n                <label>Peso</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"peso\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Peso\"\r\n                    onChange={handleChange}\r\n                    value={peso}\r\n                />\r\n                <label>Feha de vacunas</label>\r\n                <input \r\n                    type=\"date\"\r\n                    name=\"vacunas\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Vacunas anuales?\"\r\n                    onChange={handleChange}\r\n                    value={vacunas}\r\n                />\r\n                <label>Nombre Dueño</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"nombreDueno\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Nombre  Dueño de la mascota\"\r\n                    onChange={handleChange}\r\n                    value={nombreDueno}\r\n                />\r\n                <label>Ci Dueño</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"ciDueno\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ci del dueño de la mascota\"\r\n                    onChange={handleChange}\r\n                    value={ciDueno}\r\n                />\r\n                <label>Teléfono Dueño</label>\r\n                <input \r\n                    type=\"text\"\r\n                    name=\"telefonoDueno\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Teléfono del dueño\"\r\n                    onChange={handleChange}\r\n                    value={telefonoDueno}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"u-full-width button-primary\"\r\n                >Agregar Mascota</button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, { Fragment, useEffect, useState} from 'react';\r\nimport Form from './Form';\r\nimport { getLastPets, savePet, deletePet} from '../services/index.js';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const [mascotas, setMascotas] = useState([]);\r\n\r\n    async function loadLastPets() {\r\n        const response = await getLastPets()\r\n\r\n        if (response.status === 200) {\r\n            setMascotas(response.data.mascotas)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadLastPets()\r\n    }, [])\r\n\r\n    //función que agregue la nueva mascota\r\n    const agregarMascota = async (mascota) => {\r\n        await savePet(mascota)\r\n        loadLastPets()\r\n    }\r\n\r\n    const borrarMascota = async (id) => {\r\n        await deletePet(id);\r\n        loadLastPets();\r\n    }\r\n\r\n    /*const actualizarMascota = async (mascota) => {\r\n        await updatePet(mascota)\r\n        loadLastPets()\r\n    }*/\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Administrador Vet</h1>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"one-half column\">\r\n                        <Form agregarMascota={agregarMascota} />\r\n                    </div>\r\n                    <div className=\"one-half column\">\r\n                        <h2>Administra tus mascotas</h2>\r\n                        {mascotas.length === 0 && 'No hay mascotas ingresadas'}\r\n                        {\r\n                            mascotas.map((mascota) => (\r\n                                <div className=\"cita\" key={mascota._id}>\r\n                                    <p>Nombre: <span>{mascota.nombre}</span> </p>\r\n                                    <p>Tipo: <span>{mascota.tipo}</span> </p>\r\n                                    <p>Fecha de nacimiento: <span>{mascota.fechaDeNacimiento}</span> </p>\r\n                                    <p>Peso: <span>{mascota.peso}</span> </p>\r\n                                    <p>Vacunas anuales: <span>{mascota.vacunas}</span> </p>\r\n                                    <p>Nombre Dueño: <span>{mascota.nombreDueno}</span> </p>\r\n                                    <p>Ci Dueño: <span>{mascota.ciDueno}</span> </p>\r\n                                    <p>Teléfono Dueño: <span>{mascota.telefonoDueno}</span> </p>\r\n\r\n                                    <button className=\"button eliminar\"\r\n                                        onClick={() => borrarMascota(mascota._id)}\r\n                                    >Borrar</button>\r\n                            \r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {mascotas.length !== 0 && \r\n                            <NavLink to=\"/mascotas\" className=\"button navegar\">Ver todas las mascotas</NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\r\nimport ListofPets from './mascotas/components/ListofPets'\r\nimport Home from './mascotas/components/Home'\r\n\r\nconst router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home}></Route>\r\n                <Route exact path=\"/home\" component={Home}></Route>\r\n                <Route exact path=\"/mascotas\" component={ListofPets}></Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default router\r\n","import React from 'react';\nimport Router from './Router';\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}